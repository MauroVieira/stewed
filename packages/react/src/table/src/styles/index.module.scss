@use "@stewed/react/src/theme/src/styles" as theme;
@use "@stewed/react/src/typography/src/styles" as text;
@use "./variables" as *;

@include theme.scope($table-root) {
  @include theme.define-var(
    (
      border-radius: theme.get-radius(md),
      background-color: theme.get-color("neutral", "100"),
      border-color: theme.get-color("neutral", "300"),
    )
  );

  position: relative;
  display: table;
  width: 100%;
  text-align: left;
  border-spacing: 0;
  border: 0;
  border-radius: theme.get-var(border-radius);

  &__head {
    display: table-row-group;

    .#{$table-root}__cell {
      padding-block: theme.get-spacing("md");
      padding-inline: theme.get-spacing("xl");
      background-color: theme.get-var(background-color-head);

      @include text.typography(
        base,
        $overrides: (
          color: theme.get-color("neutral", "500"),
          font-size: theme.get-font-size("sm"),
          line-height: 1
        )
      );

      &:first-child {
        border-top-left-radius: theme.get-var(border-radius);
      }

      &:last-child {
        border-top-right-radius: theme.get-var(border-radius);
      }
    }

    // Skins
    @each $key, $value in $table-head-skins {
      &--#{$key} {
        @include theme.define-var(
          (
            background-color-head: $value,
          )
        );
      }
    }
  }

  &__body {
    position: relative;
    display: table-row-group;
    width: auto;
    overflow-x: hidden;
    white-space: normal;

    .#{$table-root}__row--selected {
      .#{$table-root}__cell {
        background-color: theme.get-color("primary", "100");
      }
    }

    .#{$table-root}__cell {
      padding-block: theme.get-spacing("md");
      padding-inline: theme.get-spacing("xl");

      @include text.typography(
        base,
        $overrides: (color: currentColor, font-size: theme.get-font-size("sm"))
      );
    }
  }

  &__foot {
    display: table-row-group;

    .#{$table-root}__cell {
      padding-block: theme.get-spacing("md");
      padding-inline: theme.get-spacing("xl");
      background-color: theme.get-var(background-color);

      &:first-child {
        border-bottom-left-radius: theme.get-var(border-radius);
      }

      &:last-child {
        border-bottom-right-radius: theme.get-var(border-radius);
      }

      @include text.typography(
        base,
        $overrides: (color: currentColor, font-size: theme.get-font-size("sm"))
      );
    }
  }

  &__row {
    display: table-row;
    vertical-align: middle;

    &--critical {
      .#{$table-root}__cell {
        background-color: theme.get-color("critical", "100");
      }
    }
  }

  &__cell {
    display: table-cell;

    &--sortable {
      cursor: pointer;
    }

    &--start {
      text-align: start;
    }

    &--center {
      text-align: center;
    }

    &--end {
      text-align: end;
    }
  }

  &--striped-rows {
    .#{$table-root}__body .#{$table-root}__row {
      &:nth-child(even) {
        background-color: theme.get-var(background-color);
      }
    }
  }

  &--default,
  &--striped-rows,
  &--border-rows,
  &--border-columns {
    &:not(.#{$table-root}--border) {
      .#{$table-root}__head,
      .#{$table-root}__foot {
        .#{$table-root}__cell {
          border-top: 1px solid theme.get-var(border-color);
          border-bottom: 1px solid theme.get-var(border-color);

          &:first-child {
            border-left: 1px solid theme.get-var(border-color);
            border-top-left-radius: theme.get-var(border-radius);
            border-bottom-left-radius: theme.get-var(border-radius);
          }

          &:last-child {
            border-right: 1px solid theme.get-var(border-color);
            border-top-right-radius: theme.get-var(border-radius);
            border-bottom-right-radius: theme.get-var(border-radius);
          }
        }
      }
    }
  }

  &--default {
    border-spacing: 0 theme.get-spacing("xxs");
  }

  &--default,
  &--striped-rows {
    &:not(.#{$table-root}--border, .#{$table-root}--border-rows) {
      .#{$table-root}__body .#{$table-root}__row .#{$table-root}__cell {
        &:first-child {
          border-top-left-radius: theme.get-var(border-radius);
          border-bottom-left-radius: theme.get-var(border-radius);
        }

        &:last-child {
          border-top-right-radius: theme.get-var(border-radius);
          border-bottom-right-radius: theme.get-var(border-radius);
        }
      }
    }
  }

  &--border {
    border: 1px solid theme.get-var(border-color);

    .#{$table-root}__head {
      .#{$table-root}__cell {
        border-bottom: 1px solid theme.get-var(border-color);
      }
    }

    .#{$table-root}__foot {
      .#{$table-root}__cell {
        border-top: 1px solid theme.get-var(border-color);
      }
    }
  }

  &--border-rows {
    .#{$table-root}__body {
      .#{$table-root}__row:not(:first-of-type) {
        .#{$table-root}__cell {
          border-block-start: 1px solid theme.get-var(border-color);
        }
      }
    }

    .#{$table-root}__foot {
      .#{$table-root}__cell {
        border-block-start: 1px solid theme.get-var(border-color);
      }
    }
  }

  &--border-columns {
    .#{$table-root} {
      &__cell:not(:first-child) {
        border-inline-start: 1px solid theme.get-var(border-color);
      }
    }
  }

  &--border,
  &--border-rows,
  &--border-columns {
    .#{$table-root}__body:last-of-type .#{$table-root}__row {
      &:last-child > .#{$table-root}__cell {
        &:first-of-type {
          border-bottom-left-radius: theme.get-var(border-radius);
        }

        &:last-child {
          border-bottom-right-radius: theme.get-var(border-radius);
        }
      }
    }
  }

  &--hoverable {
    .#{$table-root}__body {
      .#{$table-root}__row:hover {
        position: relative;
        .#{$table-root}__cell {
          cursor: pointer;
          background-color: color-mix(in srgb, theme.get-color("primary", "500"), transparent 95%);
        }
      }
    }
  }
}
