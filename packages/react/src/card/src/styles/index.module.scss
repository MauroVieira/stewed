@use "@stewed/react/src/theme/src/styles" as theme;
@use "./variables" as *;

@include theme.scope($card-root) {
  @include theme.define-var(
    (
      padding: 0,
      background-color: #fff,
    )
  );

  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;
  background-color: theme.get-var(background-color);
  border-radius: theme.get-var(radius);
  box-shadow: theme.get-var(box-shadow);

  &__body {
    flex: 1;
  }

  &__media {
    border-top-left-radius: theme.get-var(radius);
    border-top-right-radius: theme.get-var(radius);

    [src] {
      width: 100%;
      height: 100%;
      border-radius: inherit;
      object-fit: cover;
    }
  }

  &__header,
  &__body,
  &__footer {
    padding-block: theme.get-var(padding-block);
    padding-inline: theme.get-var(padding-inline);
  }

  &--sm {
    @include theme.define-var(
      (
        padding: theme.get-spacing("md"),
      )
    );
  }

  &--md {
    @include theme.define-var(
      (
        padding: theme.get-spacing("xl"),
      )
    );
  }

  &--lg {
    @include theme.define-var(
      (
        padding: theme.get-spacing("2xl"),
      )
    );
  }

  &--selected {
    outline: 2px solid theme.get-color("primary");
  }

  &--hoverable {
    cursor: pointer;
  }

  // Skin
  &--default {
    @include theme.define-var(
      (
        background-color: #fff,
      )
    );
  }

  &--neutral {
    @include theme.define-var(
      (
        background-color: theme.get-color("neutral", "faded"),
      )
    );
  }

  // Padding
  @each $key, $value in $card-padding {
    &--padding-block-#{$key} {
      @include theme.define-var(
        (
          padding-block: #{$value},
        )
      );
    }
  }

  @each $key, $value in $card-padding {
    &--padding-inline-#{$key} {
      @include theme.define-var(
        (
          padding-inline: #{$value},
        )
      );
    }
  }

  // Elevation
  @each $key, $value in $card-elevation {
    &--elevation-#{$key} {
      @include theme.define-var(
        (
          box-shadow: $value,
        )
      );
    }
  }
}
