@use "@stewed/react/src/theme/src/styles" as theme;
@use "./variables" as *;

@include theme.scope($card-root) {
  position: relative;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  overflow: hidden;
  background-color: theme.get-color("background-surface");
  border-radius: theme.get-var(radius);
  box-shadow: theme.get-var(box-shadow);

  @include theme.define-var(
    (
      padding: 0,
    )
  );

  &__body {
    flex: 1;
  }

  &__media {
    display: block;

    &__img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: inherit;
    }

    &__slot {
      position: absolute;
      top: 0;
      width: 100%;
      height: 100%;
      padding-block: theme.get-var(padding-block);
      padding-inline: theme.get-var(padding-inline);
    }

    &:last-of-type {
      border-bottom-right-radius: theme.get-var(radius);
      border-bottom-left-radius: theme.get-var(radius);
    }
  }

  &__header,
  &__body,
  &__footer {
    padding-block: theme.get-var(padding-block);
    padding-inline: theme.get-var(padding-inline);
  }

  &--column {
    flex-direction: column;

    .#{$card-root} {
      &__media {
        border-top-left-radius: theme.get-var(radius);
        border-top-right-radius: theme.get-var(radius);
      }
    }
  }

  &--row {
    flex-direction: row;

    .#{$card-root} {
      &__media {
        border-top-left-radius: theme.get-var(radius);
        border-bottom-left-radius: theme.get-var(radius);
      }
    }
  }

  &--sm {
    @include theme.define-var(
      (
        padding: theme.get-spacing("md"),
      )
    );
  }

  &--md {
    @include theme.define-var(
      (
        padding: theme.get-spacing("xl"),
      )
    );
  }

  &--lg {
    @include theme.define-var(
      (
        padding: theme.get-spacing("2xl"),
      )
    );
  }

  // Padding
  @each $key, $value in $card-padding {
    &--padding-block-#{$key} {
      @include theme.define-var(
        (
          padding-block: #{$value},
        )
      );
    }

    &--padding-inline-#{$key} {
      @include theme.define-var(
        (
          padding-inline: #{$value},
        )
      );
    }
  }

  // Shadow
  @each $key, $value in $card-shadow {
    &--shadow-#{$key} {
      @include theme.define-var(
        (
          box-shadow: $value,
        )
      );
    }
  }
}
