@use "@stewed/react/src/theme/src/styles" as theme;
@use "@stewed/react/src/typography/src/styles" as text;
@use "./variables" as *;

@include theme.scope($badge-root) {
  @include theme.define-var(
    (
      size: 2ch,
      border-radius: theme.get-radius("full"),
      padding-inline: 0,
      position: relative,
      transform: none,
      inset: 0,
    )
  );

  position: relative;
  display: inline-flex;

  &__value {
    @include text.typography(
      base,
      $overrides: (
        color: theme.get-new-color("text", "inverse"),
        font-size: theme.get-font-size("xs")
      )
    );

    position: theme.get-var(position);
    inset: theme.get-var(inset);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: theme.get-var(size);
    height: theme.get-var(size);
    padding-inline: theme.get-var(padding-inline);
    white-space: nowrap;
    background-color: theme.get-var(background-color);
    border-radius: theme.get-var(border-radius);
    transform: theme.get-var(transform);

    &:empty {
      @include theme.define-var(
        (
          size: theme.get-spacing("md"),
        )
      );

      padding: 0;
    }
  }

  @each $value in $badge-skins {
    &--#{$value} {
      @include theme.define-var(
        (
          background-color: theme.get-new-color($value),
        )
      );
    }
  }

  &--padded {
    @include theme.define-var(
      (
        padding-inline: theme.get-spacing("sm"),
      )
    );
  }

  &--top-left,
  &--top-right,
  &--bottom-left,
  &--bottom-right {
    @include theme.define-var(
      (
        position: absolute,
      )
    );
  }

  &--top-left {
    @include theme.define-var(
      (
        inset: 0 auto auto 0,
        transform: translate(-50%, -50%),
      )
    );
  }

  &--top-right {
    @include theme.define-var(
      (
        inset: 0 0 auto auto,
        transform: translate(50%, -50%),
      )
    );
  }

  &--bottom-left {
    @include theme.define-var(
      (
        inset: auto auto 0 0,
        transform: translate(-50%, 50%),
      )
    );
  }

  &--bottom-right {
    @include theme.define-var(
      (
        inset: auto 0 0 auto,
        transform: translate(50%, 50%),
      )
    );
  }
}
