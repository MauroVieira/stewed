@use "@stewed/react/src/theme/src/styles" as theme;
@use "@stewed/react/src/typography/src/styles" as text;
@use "./variables" as *;

@include theme.scope($checkbox-root) {
  position: relative;
  display: inline-flex;
  gap: theme.get-spacing("sm");
  align-items: center;
  justify-content: center;
  cursor: pointer;

  @include theme.focus-styles($target: ":focus-within .#{$checkbox-root}__control");

  @include theme.define-var(
    (
      background-color: transparent,
      border-color: theme.get-color("neutral", "border-faded")
    )
  );

  &--disabled {
    @include theme.disabled-styles;
  }

  &:not(&--disabled) {
    @include theme.hover {
      @include theme.define-var(
        (
          background-color: theme.get-color("neutral", "background-faded")
        )
      );
    }
  }

  &--border {
    box-sizing: border-box;
    height: calc(theme.get-var(size) * 2);
    padding-inline: theme.get-spacing("md");
    border: 1px solid theme.get-var(border-color);
    border-radius: theme.get-var(radius);
  }

  &__input {
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    border: 0;
    outline: none;
    opacity: 0;

    &:indeterminate,
    &:checked {
      + .checkbox__control .checkbox__svg {
        scale: 1;
      }
    }
  }

  &__control {
    position: relative;
    box-sizing: border-box;
    display: flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    width: theme.get-var(size);
    height: theme.get-var(size);
    background-color: theme.get-var(background-color);
    border: 1px solid theme.get-var(border-color);
    border-radius: theme.get-var(radius);

    @include theme.transition((background-color, border));
  }

  &__svg {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    fill: #fff;
    transform: translate(-50%, -50%);
    transform-origin: 0 0;
    scale: 0;

    @include theme.transition(scale);
  }

  &__text {
    @include text.typography(label);
  }

  // Sizes
  @each $key, $value in $checkbox-sizes {
    &--#{$key} {
      @include theme.define-var(
        (
          size: $value
        )
      );
    }
  }

  &__group {
    display: flex;
    gap: theme.get-spacing("md");
    align-items: start;

    &--horizontal {
      flex-flow: wrap;
      flex-direction: row;

      &.#{$checkbox-root}__group--full-width {
        .#{$checkbox-root} {
          flex: 1;
        }
      }
    }

    &--vertical {
      flex-direction: column;
    }

    &--full-width {
      width: 100%;

      .#{$checkbox-root} {
        box-sizing: border-box;
        justify-content: start;
        width: 100%;
      }
    }
  }

  &__spinner {
    display: flex;
    font-size: inherit;
  }

  &--loading {
    pointer-events: none;
  }

  // Skins
  @each $key, $value in $checkbox-skins {
    &--#{$key} {
      &:has(input:indeterminate, input:checked) {
        @include theme.define-var(
          (
            background-color: theme.get-color($value, "background"),
            border-color: theme.get-color($value, "border")
          )
        );

        @include theme.hover {
          @include theme.define-var(
            (
              background-color: color-mix(in srgb, theme.get-color($value, "background") 90%, black),
              border-color: color-mix(in srgb, theme.get-color($value, "border") 90%, black)
            )
          );
        }
      }
    }
  }
}
