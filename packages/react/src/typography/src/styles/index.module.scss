@use "@stewed/react/src/theme/src/styles" as theme;
@use "./variables" as *;
@use "./mixins" as mix;

@include theme.scope($typography-root) {
  padding: 0;
  margin: 0;

  &[href] {
    text-decoration: none;
    cursor: pointer;

    &:hover {
      text-decoration: underline;
      text-underline-position: under;
    }

    @include theme.focus-styles {
      border-radius: theme.get-radius("md");
    }
  }

  @each $key, $value in $typography-styles {
    &--#{$key} {
      @include mix.typography($key);
    }
  }

  &--normal {
    font-style: normal;
  }

  &--italic {
    font-style: italic;
  }

  &--uppercase {
    text-transform: uppercase;
  }

  &--lowercase {
    text-transform: lowercase;
  }

  &--capitalize {
    text-transform: capitalize;
  }

  &--line-through {
    text-decoration: line-through;
  }

  &--overline {
    text-decoration: overline;
  }

  &--underline {
    text-decoration: underline;
  }

  &--alignment-start {
    text-align: start;
  }

  &--alignment-center {
    text-align: center;
  }

  &--alignment-end {
    text-align: end;
  }

  &--alignment-justify {
    text-align: justify;
  }

  &--white-space-nowrap {
    white-space: nowrap;
  }

  &--white-space-normal {
    white-space: normal;
  }

  // Skins
  &--inherit {
    @include theme.define-var(
      (
        color: inherit,
      )
    );
  }

  &--white {
    @include theme.define-var(
      (
        color: theme.get-color("white"),
      )
    );
  }

  &--black {
    @include theme.define-var(
      (
        color: theme.get-color("black"),
      )
    );
  }

  &--text-base {
    @include theme.define-var(
      (
        color: theme.get-color("text-base"),
      )
    );
  }

  @each $key, $value in $typography-skins {
    &--#{$key} {
      @include theme.define-var(
        (
          color: theme.get-color($key, "500"),
        )
      );
    }
  }

  @each $value in (1, 2, 3, 4, 5, 6, 7) {
    &--line-clamp-#{$value} {
      display: -webkit-box;
      -webkit-line-clamp: $value;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  }

  // Sizes
  @each $key, $value in $typography-sizes {
    &--#{$key} {
      @include theme.define-var(
        (
          font-size: $value,
        )
      );
    }
  }

  // Font Family
  @each $key, $value in $typography-family {
    &--#{$key} {
      @include theme.define-var(
        (
          font-family: $value,
        )
      );
    }
  }

  // Weights
  @each $key, $value in $typography-weights {
    &--#{$key} {
      @include theme.define-var(
        (
          font-weight: $value,
        )
      );
    }
  }

  // Space
  @each $key, $value in $typography-space {
    &--space-x-#{$key} {
      margin-inline-end: #{$value};
    }

    &--space-y-#{$key} {
      margin-block-end: #{$value};
    }
  }
}
