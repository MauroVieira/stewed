@use "sass:map";
@use "@stewed/react/src/theme/src/styles" as theme;
@use "@stewed/react/src/typography/src/styles" as text;
@use "./variables" as *;

@include theme.scope($input-root) {
  @include theme.define-var(
    (
      border-color: map.get($input-skins-default, "border-color"),
      border-radius: map.get(theme.$radius, "md"),
      height: $input-height,
    )
  );

  @include text.typography(base, $overrides: (font-size: $input-font-size));
  @include theme.focus-styles($target: ":focus-within");

  position: relative;
  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: 0 $input-spacings;
  overflow: hidden;
  border: 1px solid theme.get-var(border-color);
  border-radius: theme.get-var(border-radius);

  &:hover {
    border-color: theme.get-var(border-color-hover);
  }

  &__input {
    all: unset;
    box-sizing: border-box;
    flex-grow: 1;
    width: 100%;
    height: theme.get-var(height);
    padding-block: $input-spacings;
    padding-inline: 50%;
    margin-inline: -50%;
    touch-action: manipulation;

    @include theme.disabled-styles;
  }

  @each $key, $value in $input-skins {
    &--#{$key} {
      @include theme.define-var(
        (
          border-color: map.get($value, border-color),
          border-color-hover: map.get($value, border-color-hover),
        )
      );
    }
  }

  &__left,
  &__right {
    position: relative;
    display: flex;
    flex-shrink: 0;
    align-items: center;
  }

  &__left {
    padding-inline-end: $input-spacings;
  }

  &__right {
    padding-inline-start: $input-spacings;
  }
}
