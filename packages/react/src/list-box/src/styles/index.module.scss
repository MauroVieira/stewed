@use "@stewed/react/src/theme/src/styles" as theme;
@use "@stewed/react/src/typography/src/styles" as text;
@use "./variables" as *;

@include theme.scope($list-box-root) {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;

  &__item {
    position: relative;
    box-sizing: border-box;
    display: flex;
    gap: theme.get-spacing("sm");
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    min-height: 34px;
    padding-inline: theme.get-spacing("md");
    overflow: hidden;
    cursor: pointer;
    background-color: theme.get-var(background-color);
    border-radius: theme.get-var(radius);

    @include theme.define-var(
      (
        background-color: transparent,
        color: inherit,
      )
    );

    &:not(:last-child) {
      margin-bottom: theme.get-spacing("xxs");
    }

    @include text.typography(
      base,
      $overrides: (font-size: theme.get-font-size("sm"), line-height: theme.get-line-height("sm"))
    );

    @include theme.focus-styles;

    &--disabled {
      @include theme.disabled-styles;
    }

    &:hover:not([aria-disabled]) {
      @include theme.define-var(
        (
          background-color: theme.get-color("neutral", "background-faded"),
        )
      );
    }

    &:active {
      @include theme.define-var(
        (
          background-color: theme.get-color("neutral", "background-faded"),
        )
      );
    }

    &__text {
      flex-grow: 1;
    }

    &__left,
    &__right {
      position: relative;
      display: flex;
      flex-shrink: 0;
      align-items: center;
    }

    @each $key, $value in $list-box-item-skins {
      &--#{$key} {
        @include theme.define-var(
          (
            background-color: transparent,
            color: theme.get-color($value, "foreground"),
          )
        );

        &:hover:not([aria-disabled]) {
          @include theme.define-var(
            (
              background-color: theme.get-color($value, "background-faded"),
            )
          );
        }

        &:active {
          @include theme.define-var(
            (
              background-color: theme.get-color($value, "background-faded"),
            )
          );
        }

        &.#{$list-box-root}__item--selected {
          @include theme.define-var(
            (
              background-color: theme.get-color($value, "background-faded"),
            )
          );
        }
      }
    }
  }

  &__group {
    padding-block: theme.get-spacing("xxs");

    &__title {
      margin-bottom: 8px;

      @include text.typography(
        base,
        $overrides: (
          color: theme.get-color("neutral", "foreground"),
          font-size: theme.get-font-size("xs"),
          line-height: theme.get-line-height("sm")
        )
      );
    }
  }
}
