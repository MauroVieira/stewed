@use "sass:map";
@use "@stewed/react/src/theme" as theme;
@use "./variables" as *;

@include theme.scope($flex-root) {
    --flex-display: flex;

    display: var(--flex-display);

    &--inline {
        --flex-display: inline-flex;
    }

    // Direction
    &--row-reverse {
        flex-direction: row-reverse;
    }

    &--column {
        flex-direction: column;
    }

    &--column-reverse {
        flex-direction: column-reverse;
    }

    // Gap
    @each $key, $value in $flex-gap {
        &--gap-#{$key} {
            gap: #{$value};
        }
    }

    // Space
    @each $key, $value in $flex-gap {
        &--space-x-#{$key}:not([hidden]) ~ :not([hidden]) {
            margin-left: #{$value};
        }

        &--space-y-#{$key}:not([hidden]) ~ :not([hidden]) {
            margin-top: #{$value};
        }
    }

    // Justify Content
    &--justify-start {
        justify-content: flex-start;
    }

    &--justify-end {
        justify-content: flex-end;
    }

    &--justify-center {
        justify-content: center;
    }

    &--justify-between {
        justify-content: space-between;
    }

    &--justify-around {
        justify-content: space-around;
    }

    &--justify-evenly {
        justify-content: space-evenly;
    }

    // Align Items
    &--items-start {
        align-items: flex-start;
    }

    &--items-end {
        align-items: flex-end;
    }

    &--items-center {
        align-items: center;
    }

    &--items-baseline {
        align-items: baseline;
    }

    &--items-stretch {
        align-items: stretch;
    }

    // Flex Grow
    &--grow {
        flex-grow: 1;
    }

    // Flex Wrap
    &--wrap {
        flex-wrap: wrap;
    }

    &--wrap-reverse {
        flex-wrap: wrap-reverse;
    }

    &--nowrap {
        flex-wrap: nowrap;
    }
}
