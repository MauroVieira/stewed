function Dialog(i){var t=this;this.dialog=document.getElementById(i),this.isOpen=!1;if(this.backgroundColor="#000",null!==this.dialog){for(var e=this.dialog.getElementsByClassName("dialog-close"),s=0;s<e.length;s++){var a=e[s];a.addEventListener("click",function(){t.hide()})}this.dialog.addEventListener("transitionend",function(){this.classList.contains("dialog--animatable")&&this.classList.remove("dialog--animatable")}),document.addEventListener("keyup",function(i){27===i.keyCode&&t.isOpen&&t.hide()})}this.show=function(){null!==this.dialog&&(this.dialog.classList.add("dialog--visible"),this.isOpen=!0)},this.hide=function(){null!==this.dialog&&(this.dialog.classList.remove("dialog--visible"),this.dialog.classList.add("dialog--animatable"),this.isOpen=!1)}}function Modal(i){var t=this;this.modal=document.getElementById(i),this.isOpen=!1;if(this.backgroundColor="#000",null!==this.modal){for(var e=this.modal.getElementsByClassName("modal-close"),s=0;s<e.length;s++){var a=e[s];a.addEventListener("click",function(){t.hide()})}this.modal.addEventListener("transitionend",function(){this.classList.contains("modal--animatable")&&this.classList.remove("modal--animatable")}),document.addEventListener("keyup",function(i){27===i.keyCode&&t.isOpen&&t.hide()})}this.show=function(){null!==this.modal&&(this.modal.classList.add("modal--visible"),this.isOpen=!0)},this.hide=function(){null!==this.modal&&(this.modal.classList.remove("modal--visible"),this.modal.classList.add("modal--animatable"),this.isOpen=!1)}}console.log("Dialog (v0.1.2)"),!function(){for(var i=[],t=document.querySelectorAll("[stewed-dialog]"),e=0;e<t.length;e++){var s=t[e],a=s.getAttribute("stewed-dialog");i[a]=new dialog(a),s.addEventListener("click",function(){var t=this.getAttribute("stewed-dialog"),e=i[t];e.isOpen?e.hide():e.show()})}}(),console.log("Modal (v0.1.2)"),!function(){for(var i=[],t=document.querySelectorAll("[stewed-modal]"),e=0;e<t.length;e++){var s=t[e],a=s.getAttribute("stewed-modal");i[a]=new Modal(a),s.addEventListener("click",function(){var t=this.getAttribute("stewed-modal"),e=i[t];e.isOpen?e.hide():e.show()})}}();
//# sourceMappingURL=data:application/json;base64,
