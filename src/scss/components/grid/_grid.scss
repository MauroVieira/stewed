// Row wrapper class, flex box parent.
 .#{ $class-row } {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  @include spacing( ( -$gutter ), margin, horizontal );
}

%#{ $class-cell } {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  flex-shrink: 0;
  min-height: 1px;
  @include spacing( ( $gutter ), padding, horizontal );
}

%#{ $class-cell }-flex {
  @extend %#{ $class-cell };
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

 @mixin grid-base( $namespace ) {
  .#{ $class-cell }-#{$namespace} {
    @extend %#{ $class-cell }-flex;
  }

  @for $i from 1 through $columns {
    .#{ $class-cell }-#{$namespace}-#{$i} {
      @extend %#{ $class-cell };
    }
  }
}

@mixin grid-sizes( $namespace ) {
  @for $i from 1 through $columns {
    .#{ $class-cell }-#{$namespace}-#{$i} {
      flex-basis: get-col-percent($i);
      max-width:  get-col-percent($i);
    }
  }

  @for $i from 1 through $columns {
    @if ( $i != $columns ) {
      .#{ $class-off }-#{$namespace}-#{$i} {
        margin-left: get-col-percent($i);
      }
    }
  }

  .#{ $class-off }-#{$namespace}-0 {
    margin-left: 0;
  }
}

 @each $val in $breakpoints {
  $namespace: nth($val, 1);
  @include grid-base( $namespace );
}

@each $val in $breakpoints {
  @if length($val) == 1 {
    $namespace: nth($val, 1);
    @include grid-sizes( $namespace );
  } @else {
    $namespace: nth($val, 1);
    $size: nth($val, 2);
    @media only screen and (min-width: #{$size}) {
      @include grid-sizes( $namespace );
    }
  }
}

