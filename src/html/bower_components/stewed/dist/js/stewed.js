"use strict";function Modal(t){var s=this;this.modal=document.getElementById(t),this.isOpen=!1;if(this.backgroundColor="#000",null!==this.modal){for(var e=this.modal.getElementsByClassName("modal-close"),a=0;a<e.length;a++){var i=e[a];i.addEventListener("click",function(){s.hide()})}this.modal.addEventListener("transitionend",function(){this.classList.contains("modal--animatable")&&this.classList.remove("modal--animatable")}),document.addEventListener("keyup",function(t){27===t.keyCode&&s.isOpen&&s.hide()})}this.show=function(){null!==this.modal&&(this.modal.classList.add("modal--visible"),this.isOpen=!0)},this.hide=function(){null!==this.modal&&(this.modal.classList.remove("modal--visible"),this.modal.classList.add("modal--animatable"),this.isOpen=!1)}}function Snackbar(t){var s=this;this.snackbar=document.getElementById(t),this.isOpen=!1;if(null!==this.snackbar){for(var e=this.snackbar.getElementsByClassName("snackbar-close"),a=0;a<e.length;a++){var i=e[a];i.addEventListener("click",function(){s.hide()})}this.snackbar.addEventListener("transitionend",function(){this.classList.contains("snackbar--animatable")&&this.classList.remove("snackbar--animatable")}),document.addEventListener("keyup",function(t){27===t.keyCode&&s.isOpen&&s.hide()})}this.show=function(){null!==this.snackbar&&(this.snackbar.classList.add("snackbar--visible"),this.isOpen=!0)},this.hide=function(){null!==this.snackbar&&(this.snackbar.classList.remove("snackbar--visible"),this.snackbar.classList.add("snackbar--animatable"),this.isOpen=!1)}}console.log("Modal (v0.1.2)"),!function(){for(var t=[],s=document.querySelectorAll("[stewed-modal]"),e=0;e<s.length;e++){var a=s[e],i=a.getAttribute("stewed-modal");t[i]=new Modal(i),a.addEventListener("click",function(){var s=this.getAttribute("stewed-modal"),e=t[s];e.isOpen?e.hide():e.show()})}}(),console.log("Snackbar (v0.1.2)"),!function(){for(var t=[],s=document.querySelectorAll("[stewed-snackbar]"),e=0;e<s.length;e++){var a=s[e],i=a.getAttribute("stewed-snackbar");t[i]=new Snackbar(i),a.addEventListener("click",function(){var s=this.getAttribute("stewed-snackbar"),e=t[s];e.isOpen?e.hide():e.show()})}}();
//# sourceMappingURL=data:application/json;base64,
