"use strict";var Form=function(){const t=document.querySelectorAll('[stewed-validate="true"]');for(var e=document.getElementsByClassName("textfield__input"),i=0;i<e.length;i++)if(!e[i].disabled){var s=e[i];s.parentNode.className="textfield",s.addEventListener("input",function(){if(t.length){const e=""==this.min?"tel"==this.type?9:2:this.min,i=""==this.max?"tel"==this.type?13:Number.MAX_SAFE_INTEGER:this.max,s=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;"select-one"==this.type?""!=this.value?this.parentNode.className="textfield textfield--valid":this.parentNode.className="textfield textfield--invalid":"textarea"==this.type?this.value.length>1?this.parentNode.className="textfield textfield--valid":0==this.value.length?this.parentNode.className="textfield":this.parentNode.className="textfield textfield--invalid":this.value.length>=e&&this.value.length<=i?"email"==this.type?s.test(this.value)?this.parentNode.className="textfield textfield--valid":this.parentNode.className="textfield textfield--invalid":this.parentNode.className="textfield textfield--valid":0==this.value.length?this.parentNode.className="textfield":this.parentNode.className="textfield textfield--invalid"}else this.value.length>1?this.parentNode.className="textfield textfield--filled":this.parentNode.className="textfield"})}};!function(){new Form}();var Modal=function(t){var e=this;if(this.modal=document.getElementById(t),this.isOpen=!1,null!==this.modal){for(var i=this.modal.getElementsByClassName("modal-close"),s=0;s<i.length;s++){var a=i[s];a.addEventListener("click",function(){e.hide()})}this.modal.addEventListener("transitionend",function(){this.classList.contains("modal--animatable")&&this.classList.remove("modal--animatable")}),document.addEventListener("keyup",function(t){27===t.keyCode&&e.isOpen&&e.hide()})}this.show=function(){null!==this.modal&&(this.modal.classList.add("modal--visible"),this.isOpen=!0)},this.hide=function(){null!==this.modal&&(this.modal.classList.remove("modal--visible"),this.modal.classList.add("modal--animatable"),this.isOpen=!1)}};!function(){for(var t=[],e=document.querySelectorAll("[stewed-modal]"),i=0;i<e.length;i++){var s=e[i],a=s.getAttribute("stewed-modal");t[a]=new Modal(a),s.addEventListener("click",function(){var e=this.getAttribute("stewed-modal"),i=t[e];i.isOpen?i.hide():i.show()})}}();var snackbar=function(t){var e=this;if(this.snackbar=document.getElementById(t),this.isOpen=!1,null!==this.snackbar){for(var i=this.snackbar.getElementsByClassName("snackbar-close"),s=0;s<i.length;s++){var a=i[s];a.addEventListener("click",function(){e.hide()})}this.snackbar.addEventListener("transitionend",function(){this.classList.contains("snackbar--animatable")&&this.classList.remove("snackbar--animatable")}),document.addEventListener("keyup",function(t){27===t.keyCode&&e.isOpen&&e.hide()})}this.show=function(){null!==this.snackbar&&(this.snackbar.classList.add("snackbar--visible"),this.isOpen=!0)},this.hide=function(){null!==this.snackbar&&(this.snackbar.classList.remove("snackbar--visible"),this.snackbar.classList.add("snackbar--animatable"),this.isOpen=!1)}};!function(){for(var t=[],e=document.querySelectorAll("[stewed-snackbar]"),i=0;i<e.length;i++){var s=e[i],a=s.getAttribute("stewed-snackbar");t[a]=new snackbar(a),s.addEventListener("click",function(){var e=this.getAttribute("stewed-snackbar"),i=t[e];i.isOpen?i.hide():i.show()})}}();var Tabs=function(t,e){this.tab=t,this.id=document.getElementById(e),this.hide=function(){for(var t=this.tab.parentNode.children,e=this.id.parentNode.children,i=0;i<t.length;i++)t[i].classList.remove("tabs__item--active");for(var s=0;s<e.length;s++)e[s].classList.remove("tab-section--active")},this.show=function(){this.tab.classList.add("tabs__item--active"),this.id.classList.add("tab-section--active")}};!function(){var t=document.getElementsByClassName("tabs__item");Array.from(t);for(var e=0;e<t.length;e++){var i=t[e];i.addEventListener("click",function(){var t=this.getAttribute("stewed-tab-id"),e=new Tabs(this,t);"false"!==t&&(this.classList.contains("disabled")||(e.hide(),e.show()))})}window.addEventListener("keypress",function(e){switch(e.keyCode){case KEY_UP:case KEY_LEFT:index--;break;case KEY_RIGHT:case KEY_DOWN:index++}index<0?index=0:index>=t.length&&(index=t.length-1),console.log(index)})}();var toast=function(){};!function(){toast()}();
//# sourceMappingURL=data:application/json;base64,
