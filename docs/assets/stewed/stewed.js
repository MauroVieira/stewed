"use strict";function Modal(e){var t=this;this.modal=document.getElementById(e),this.isOpen=!1;if(this.backgroundColor="#000",null!==this.modal){for(var i=this.modal.getElementsByClassName("modal-close"),s=0;s<i.length;s++){var a=i[s];a.addEventListener("click",function(){t.hide()})}this.modal.addEventListener("transitionend",function(){this.classList.contains("modal--animatable")&&this.classList.remove("modal--animatable")}),document.addEventListener("keyup",function(e){27===e.keyCode&&t.isOpen&&t.hide()})}this.show=function(){null!==this.modal&&(this.modal.classList.add("modal--visible"),this.isOpen=!0)},this.hide=function(){null!==this.modal&&(this.modal.classList.remove("modal--visible"),this.modal.classList.add("modal--animatable"),this.isOpen=!1)}}function Snackbar(e){var t=this;this.snackbar=document.getElementById(e),this.isOpen=!1;if(null!==this.snackbar){for(var i=this.snackbar.getElementsByClassName("snackbar-close"),s=0;s<i.length;s++){var a=i[s];a.addEventListener("click",function(){t.hide()})}this.snackbar.addEventListener("transitionend",function(){this.classList.contains("snackbar--animatable")&&this.classList.remove("snackbar--animatable")}),document.addEventListener("keyup",function(e){27===e.keyCode&&t.isOpen&&t.hide()})}this.show=function(){null!==this.snackbar&&(this.snackbar.classList.add("snackbar--visible"),this.isOpen=!0)},this.hide=function(){null!==this.snackbar&&(this.snackbar.classList.remove("snackbar--visible"),this.snackbar.classList.add("snackbar--animatable"),this.isOpen=!1)}}var d=new Date,form=function(){const e=document.querySelectorAll('[stewed-validate="true"]');for(var t=document.getElementsByClassName("textfield__input"),i=0;i<t.length;i++)if(!t[i].disabled){var s=t[i];s.parentNode.className="textfield",s.addEventListener("input",function(){if(e.length){const t=""==this.min?"tel"==this.type?9:2:this.min,i=""==this.max?"tel"==this.type?13:Number.MAX_SAFE_INTEGER:this.max,s=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;"select-one"==this.type?""!=this.value?this.parentNode.className="textfield textfield--valid":this.parentNode.className="textfield textfield--invalid":"textarea"==this.type?this.value.length>1?this.parentNode.className="textfield textfield--valid":0==this.value.length?this.parentNode.className="textfield":this.parentNode.className="textfield textfield--invalid":this.value.length>=t&&this.value.length<=i?"email"==this.type?s.test(this.value)?this.parentNode.className="textfield textfield--valid":this.parentNode.className="textfield textfield--invalid":this.parentNode.className="textfield textfield--valid":0==this.value.length?this.parentNode.className="textfield":this.parentNode.className="textfield textfield--invalid"}else this.value.length>1?this.parentNode.className="textfield textfield--filled":this.parentNode.className="textfield"})}};!function(){form()}(),console.log("Modal (v0.1.2)"),!function(){for(var e=[],t=document.querySelectorAll("[stewed-modal]"),i=0;i<t.length;i++){var s=t[i],a=s.getAttribute("stewed-modal");e[a]=new Modal(a),s.addEventListener("click",function(){var t=this.getAttribute("stewed-modal"),i=e[t];i.isOpen?i.hide():i.show()})}}(),console.log("Snackbar (v0.1.2)"),!function(){for(var e=[],t=document.querySelectorAll("[stewed-snackbar]"),i=0;i<t.length;i++){var s=t[i],a=s.getAttribute("stewed-snackbar");e[a]=new Snackbar(a),s.addEventListener("click",function(){var t=this.getAttribute("stewed-snackbar"),i=e[t];i.isOpen?i.hide():i.show()})}}();
//# sourceMappingURL=data:application/json;base64,
